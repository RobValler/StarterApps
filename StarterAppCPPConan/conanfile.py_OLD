from conans import ConanFile
from conan.tools.cmake import CMakeToolchain, CMake, cmake_layout


class NameConan(ConanFile):
    name = "name"
    version = "1.0.0"
    settings = "os", "compiler", "build_type", "arch"
    options = {"shared": [True, False], "fPIC": [True, False]}
    default_options = {"shared": False, "fPIC": True}
    exports_sources = [
    "CMakeLists.txt"
        , "include/*"
        , "src/*"
        , "cmake/**"
    ]

    def config_options(self):
        if self.settings.os == "Windows":
            del self.options.fPIC

    def layout(self):
        cmake_layout(self)

    def generate(self):
        tc = CMakeToolchain(self)
        tc.generate()

    def build(self):
        cmake = CMake(self)
        cmake.configure()
        cmake.build()

    def install(self):
        cmake = CMake(self)
        cmake.install()

    def package(self):
        self.copy("*.a", dst="lib", src="build/Release")
        self.copy("*.h", dst="include", src="include")
        self.copy("FindXXX.cmake", ".", ".")


